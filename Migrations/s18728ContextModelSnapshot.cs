// <auto-generated />
using System;
using AdvertApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AdvertApiS18728.Migrations
{
    [DbContext(typeof(s18728Context))]
    partial class s18728ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AdvertApi.Models.Banner", b =>
                {
                    b.Property<int>("IdAdvertisement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Area")
                        .HasColumnType("decimal(6,2)");

                    b.Property<int>("IdCampaign")
                        .HasColumnType("int");

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("IdAdvertisement")
                        .HasName("Banner_PK");

                    b.HasIndex("IdCampaign");

                    b.ToTable("Banner");
                });

            modelBuilder.Entity("AdvertApi.Models.Building", b =>
                {
                    b.Property<int>("IdBuilding")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(6,2)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("StreetNumber")
                        .HasColumnType("int");

                    b.HasKey("IdBuilding")
                        .HasName("Building_PK");

                    b.ToTable("Building");

                    b.HasData(
                        new
                        {
                            IdBuilding = 1,
                            City = "Warszawa",
                            Height = 20.5m,
                            Street = "SuperStreet",
                            StreetNumber = 5
                        },
                        new
                        {
                            IdBuilding = 2,
                            City = "Warszawa",
                            Height = 13.23m,
                            Street = "SuperStreet",
                            StreetNumber = 6
                        },
                        new
                        {
                            IdBuilding = 3,
                            City = "Szczecin",
                            Height = 14.5m,
                            Street = "ExtraStreet",
                            StreetNumber = 2
                        },
                        new
                        {
                            IdBuilding = 4,
                            City = "Szczecin",
                            Height = 22.3m,
                            Street = "ExtraStreet",
                            StreetNumber = 3
                        },
                        new
                        {
                            IdBuilding = 5,
                            City = "Szczecin",
                            Height = 23.1m,
                            Street = "ExtraStreet",
                            StreetNumber = 4
                        });
                });

            modelBuilder.Entity("AdvertApi.Models.Campaign", b =>
                {
                    b.Property<int>("IdCampaign")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FromIdBuilding")
                        .HasColumnType("int");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerSquareMeter")
                        .HasColumnType("decimal(6,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ToIdBuilding")
                        .HasColumnType("int");

                    b.HasKey("IdCampaign")
                        .HasName("Campaign_PK");

                    b.HasIndex("FromIdBuilding");

                    b.HasIndex("IdClient");

                    b.HasIndex("ToIdBuilding");

                    b.ToTable("Campaign");
                });

            modelBuilder.Entity("AdvertApi.Models.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdClient")
                        .HasName("Client_PK");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            IdClient = 1,
                            Email = "jkowalski@gmail.com",
                            FirstName = "Jan",
                            LastName = "Kowalski",
                            Login = "Kowal",
                            Phone = "666777888"
                        },
                        new
                        {
                            IdClient = 2,
                            Email = "wdzban@gmail.com",
                            FirstName = "Waclaw",
                            LastName = "Dzban",
                            Login = "Dzbanuszek",
                            Phone = "777888999"
                        },
                        new
                        {
                            IdClient = 3,
                            Email = "balgab@gmail.com",
                            FirstName = "Baltazar",
                            LastName = "Gabka",
                            Login = "Balgab",
                            Phone = "111222333"
                        },
                        new
                        {
                            IdClient = 4,
                            Email = "kryma@gmail.com",
                            FirstName = "Krystyna",
                            LastName = "Mazurska",
                            Login = "Kryma",
                            Phone = "444555666"
                        },
                        new
                        {
                            IdClient = 5,
                            Email = "joanka@gmail.com",
                            FirstName = "Joanna",
                            LastName = "Kasztan",
                            Login = "Kasztan",
                            Phone = "123456789"
                        });
                });

            modelBuilder.Entity("AdvertApi.Models.Password", b =>
                {
                    b.Property<int>("IdPassword")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPassword")
                        .HasName("Password_PK");

                    b.HasIndex("IdClient")
                        .IsUnique();

                    b.ToTable("Password");

                    b.HasData(
                        new
                        {
                            IdPassword = 1,
                            IdClient = 1,
                            PasswordHash = "1m0FRQ9+ADXA6J1D8zGW2iPd0ihZ98W4y2frRmsrFko="
                        },
                        new
                        {
                            IdPassword = 2,
                            IdClient = 2,
                            PasswordHash = "LcaOWU6xJ8499eyDCQKZ2qRI2z5LttY8M7neHdqC3JI="
                        },
                        new
                        {
                            IdPassword = 3,
                            IdClient = 3,
                            PasswordHash = "WLG1enMkUiYPd7NU2n9U5bX34MkD75zeL+C8jLWv3ns="
                        },
                        new
                        {
                            IdPassword = 4,
                            IdClient = 4,
                            PasswordHash = "qbaUwDkkW/hwzOv/wJ3ggn0Pqw2kSO70wtJm8YF00Yg="
                        },
                        new
                        {
                            IdPassword = 5,
                            IdClient = 5,
                            PasswordHash = "A0kwYP4UXEYsPVey6//t2TDstq54GVk/11mKiwrH8ws="
                        });
                });

            modelBuilder.Entity("AdvertApi.Models.Salt", b =>
                {
                    b.Property<int>("IdSalt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<string>("SaltHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSalt")
                        .HasName("Salt_PK");

                    b.HasIndex("IdClient")
                        .IsUnique();

                    b.ToTable("Salt");

                    b.HasData(
                        new
                        {
                            IdSalt = 1,
                            IdClient = 1,
                            SaltHash = "WM7C8Z+cKRVH6mnhgkXaKw=="
                        },
                        new
                        {
                            IdSalt = 2,
                            IdClient = 2,
                            SaltHash = "iuwFighj2ebn6Mujq3fBww=="
                        },
                        new
                        {
                            IdSalt = 3,
                            IdClient = 3,
                            SaltHash = "nPXnW/suIlZs9/S6JGXExA=="
                        },
                        new
                        {
                            IdSalt = 4,
                            IdClient = 4,
                            SaltHash = "hHxIRha3dWuemYFwXXmS6Q=="
                        },
                        new
                        {
                            IdSalt = 5,
                            IdClient = 5,
                            SaltHash = "bAHpe+2ORAdlmt2Q3cuKbA=="
                        });
                });

            modelBuilder.Entity("AdvertApi.Models.Banner", b =>
                {
                    b.HasOne("AdvertApi.Models.Campaign", "Campaign")
                        .WithMany("Banners")
                        .HasForeignKey("IdCampaign")
                        .HasConstraintName("Banner_Campaign")
                        .IsRequired();
                });

            modelBuilder.Entity("AdvertApi.Models.Campaign", b =>
                {
                    b.HasOne("AdvertApi.Models.Building", "FromBuilding")
                        .WithMany("FromBuildingCampaigns")
                        .HasForeignKey("FromIdBuilding")
                        .HasConstraintName("Campaign_FromBuilding")
                        .IsRequired();

                    b.HasOne("AdvertApi.Models.Client", "Client")
                        .WithMany("ClientCampaigns")
                        .HasForeignKey("IdClient")
                        .HasConstraintName("Campaign_Client")
                        .IsRequired();

                    b.HasOne("AdvertApi.Models.Building", "ToBuilding")
                        .WithMany("ToBuildingCampaigns")
                        .HasForeignKey("ToIdBuilding")
                        .HasConstraintName("Campaign_ToBuilding")
                        .IsRequired();
                });

            modelBuilder.Entity("AdvertApi.Models.Password", b =>
                {
                    b.HasOne("AdvertApi.Models.Client", "Client")
                        .WithOne("Password")
                        .HasForeignKey("AdvertApi.Models.Password", "IdClient")
                        .HasConstraintName("Client_Password")
                        .IsRequired();
                });

            modelBuilder.Entity("AdvertApi.Models.Salt", b =>
                {
                    b.HasOne("AdvertApi.Models.Client", "Client")
                        .WithOne("Salt")
                        .HasForeignKey("AdvertApi.Models.Salt", "IdClient")
                        .HasConstraintName("Client_Salt")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
